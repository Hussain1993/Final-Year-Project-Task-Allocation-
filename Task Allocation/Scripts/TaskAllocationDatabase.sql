#This sql file will load the database and tables
#that are required for the task allocation project

#This file will also create the username and password that will be used to
#access and query the Task Allocation database {Username: task_allocation, Password: password}

create database IF NOT EXISTS TaskAllocation; #Create the database

use TaskAllocation;

#Now that we have created and are using the TaskAllocation database, create the tables

CREATE TABLE  IF NOT EXISTS EMPLOYEES(
    ID INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    SEX SET('M','F') NOT NULL,
    COST INTEGER NOT NULL,
    DEPARTMENT VARCHAR(255) DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS SKILLS(
    ID INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    SKILL VARCHAR(300) NOT NULL unique
);

CREATE TABLE IF NOT EXISTS EMPLOYEE_SKILLS(
    EMPLOYEE_ID INTEGER NOT NULL,
    SKILL_ID INTEGER NOT NULL,
    PROFICIENCY SET('1','2','3','4') NOT NULL,

    PRIMARY KEY(EMPLOYEE_ID,SKILL_ID),
    UNIQUE INDEX(SKILL_ID,EMPLOYEE_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (SKILL_ID) REFERENCES SKILLS(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS PROJECTS(
    ID INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    NAME VARCHAR(300) NOT NULL,
    LOCATION VARCHAR(255) DEFAULT NULL,
    INCOME INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS TASKS(
    ID INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    NAME VARCHAR(300) NOT NULL,
    PROJECT_ID INTEGER NOT NULL,
    DATE_FROM DATE NOT NULL,
    DATE_TO DATE NOT NULL,
    COMPLETED BOOLEAN DEFAULT 0,
    NUMBER_OF_EMPLOYEES_REQUIRED INTEGER DEFAULT 1,
    PRIORITY SET('1','2','3') DEFAULT '1',
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TASK_SKILLS(
    TASK_ID INTEGER NOT NULL,
    SKILL_ID INTEGER NOT NULL,
    PROFICIENCY_REQUIRED SET('1','2','3','4') NOT NULL,

    PRIMARY KEY(TASK_ID,SKILL_ID),
    UNIQUE INDEX(SKILL_ID,TASK_ID),

    FOREIGN KEY (TASK_ID) REFERENCES TASKS(ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (SKILL_ID) REFERENCES SKILLS(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ASSIGNED_TO(
    EMPLOYEE_ID INTEGER NOT NULL,
    TASK_ID INTEGER NOT NULL,
    DATE_ASSIGNED DATETIME NOT NULL,

    PRIMARY KEY(EMPLOYEE_ID,TASK_ID),
    UNIQUE INDEX(TASK_ID,EMPLOYEE_ID),

    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (TASK_ID) REFERENCES TASKS(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USERS(
    ID INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD VARCHAR(4000) NOT NULL,
    DATE_CREATED DATETIME NOT NULL
);

#Now that all the tables have been created, make the user which will be allowed to access these
#tables, grant the user privileges in order for them to query and update the database.

GRANT SELECT,INSERT,UPDATE,DELETE ON TaskAllocation.* to task_allocation@'localhost' IDENTIFIED BY 'password';